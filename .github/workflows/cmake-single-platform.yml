# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on a single platform

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: macos-latest

    steps:

    - name: pwd and list
      run: pwd; ls -ltr

    - name: workspace and list
      run: echo ${{github.workspace}}; ls -ltr ${{github.workspace}}
      
    - uses: actions/checkout@v4

    - name: pwd and list again, after checkout 
      run: pwd; ls -ltr

    - name: cat Cell.cc
      run: cat ./source/Cell.cc

    - name: cat Ternary.cc
      run: cat ./source/Ternary.cc

    - name: cat CMakeLists.txt
      run: cat ./CMakeLists.txt

    - name: create build directory 
      run: mkdir build

    - name: CMake version
      run: cmake --version

    - name: configure CMake
      working-directory: ${{github.workspace}}/build
      run: cmake ..

    - name: build
      working-directory: ${{github.workspace}}/build
      run: make VERBOSE=1

    - name: print linker file
      working-directory: ${{github.workspace}}/build
      run: cat CMakeFiles/SudokuSolver.dir/link.txt

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest

